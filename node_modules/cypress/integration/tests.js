context('Testing web application', () => {
    beforeEach(() => {
        cy.visit('http://localhost:63342/binary_elements/index.html?_ijt=s84h0dbo7ma34dur5s482ifv4h')
    })

    describe('Testing converter', () => {
        it('Conversion Decimal - Hex, Binary - Decimal', function(){
            cy.log('Typing input value...');
            cy.get('#converter_input').type('127')
            
            cy.log('Checking Hexadecimal output...');
            cy.get('#converter_output_ex')
            .should('have.value', '7F')
            
            cy.log('Resetting...');  
            cy.get('#converter_reset').click()
            cy.get('#converter_output_1')
            .should('have.value', '')

            cy.log('Changing input type...');
            cy.get('#converter_unit_1').select('Dvojková')
            
            cy.log('Typing input value...');
            cy.get('#converter_input').type('-101,1')
            
            cy.log('Checking decimal output...');
            cy.get('#converter_output_3')
            .should('have.value', '-5, 5')
        })

        it('Conversion Direct code - Octal, Hex - Direct code', function(){
            cy.log('Changing input type...');
            cy.get('#converter_unit_1').select('Priamy kód')

            cy.log('Typing input value...');
            cy.get('#converter_input').type('10010110')
            
            cy.log('Checking Octal output...');
            cy.get('#converter_output_2')
            .should('have.value', '-26')
            
            cy.log('Resetting...');  
            cy.get('#converter_reset').click()
            cy.get('#converter_output_2')
            .should('have.value', '')

            cy.log('Changing input type...');
            cy.get('#converter_unit_1').select('Šestnástková')

            cy.log('Typing input value...');
            cy.get('#converter_input').type('FA2')

            cy.log('Switching to Binary');  
            cy.get('#binaryButton').click()
            
            cy.log('Checking Direct code output...');
            cy.get('#converter_output_5')
            .should('have.value', 'Nedostatočný počet bitov')

            cy.log('Deleting 2 letters...');
            cy.get('#converter_input').type('{backspace}').type('{backspace}')

            cy.log('Checking Direct code output...');
            cy.get('#converter_output_5')
            .should('have.value', '00001111')
        })
    })

    describe('Testing calculator', () => {

        it('Calculation Decimal + BCD code', function(){
            cy.log('Changing first input type...');
            cy.get('#calculator_first_op').select('10')
            
            cy.log('Typing input value 1...');
            cy.get('#calculator_first_number').type('127')
            
            cy.log('Changing second input type...');
            cy.get('#calculator_second_op').select('BCD kód')
            
            cy.log('Typing input value 2...');
            cy.get('#calculator_second_number').type('0110')
            
            cy.log('Checking decimal output...');
            cy.get('#calculator_output_3')
            .should('have.value', '133')
            
            cy.log('Resetting...');  
            cy.get('#calculator_reset').click()
        })

        it('Calculation Binary (+, /) Complement code', function(){
            cy.log('Changing first input type...');
            cy.get('#calculator_first_op').select('2')
            
            cy.log('Typing input value 1...');
            cy.get('#calculator_first_number').type('101.01')
            
            cy.log('Changing second input type...');
            cy.get('#calculator_second_op').select('Doplnkový kód')
            
            cy.log('Typing input value 2...');
            cy.get('#calculator_second_number').type('10010101')
            
            cy.log('Checking decimal output...');
            cy.get('#calculator_output_3')
            .should('have.value', '-101, 75')

            cy.log('Changing operation...');
            cy.get('#calculator_op').select('delené (/)')

            cy.log('Checking decimal output...');
            cy.get('#calculator_output_3')
            .should('have.value', '-0, 049 065 420 560 747 66')
            
            cy.log('Resetting...');  
            cy.get('#calculator_reset').click()
        })
    })
    
    describe('Testing minimalization', () => {

        it('Minimalization 3 variables - D form', function(){
            cy.log('Dragging slider to value 3...');
            cy.get('#slider')
            .invoke('val', 3)
            .trigger('input')
            
            cy.log('Checking change of value...');
            cy.get('#output')
            .should('have.value', '3')
            cy.wait(10)
            
            cy.log('Clicking switches...');
            cy.get('#switch0').click()
            cy.get('#switch1').click()
            cy.get('#switch2').click()
            cy.get('#switch5').click()
            cy.get('#switch6').click()
            cy.get('#switch6').click()
            cy.get('#switch7').click()
            
            cy.log('Checking UDNF...');
            cy.get('#solver_result_1')
                .find('span').should('have.length', 5)
                
            cy.log('Checking SDNF...');
            cy.get('#solver_result_2')
                .find('span').should('have.length', 6)
            cy.get('#solver_result_2 > :nth-child(1)')
                .should('have.html', 'A̅B̅')
            cy.get('#solver_result_2 > :nth-child(2)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_2 > :nth-child(3)')
                .should('have.html', 'AC')
            cy.get('#solver_result_2 > :nth-child(4)')
                .should('have.html', 'AB')
            cy.get('#solver_result_2 > :nth-child(5)')
                .should('have.html', 'B̅C')
            cy.get('#solver_result_2 > :nth-child(6)')
                .should('have.html', 'BC̅')
            
            cy.log('Checking IDNF...');
            cy.get('#solver_result_3')
                .find('span').should('have.length', 16)
            cy.get('#solver_result_3 > :nth-child(2)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_3 > :nth-child(3)')
                .should('have.html', 'AB')
            cy.get('#solver_result_3 > :nth-child(4)')
                .should('have.html', 'B̅C')
            cy.get('#solver_result_3 > :nth-child(7)')
                .should('have.html', 'A̅B̅')
            cy.get('#solver_result_3 > :nth-child(8)')
                .should('have.html', 'AB')
            cy.get('#solver_result_3 > :nth-child(9)')
                .should('have.html', 'B̅C')
            cy.get('#solver_result_3 > :nth-child(10)')
                .should('have.html', 'BC̅')
            cy.get('#solver_result_3 > :nth-child(13)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_3 > :nth-child(14)')
                .should('have.html', 'AC')
            cy.get('#solver_result_3 > :nth-child(15)')
                .should('have.html', 'B̅C')
            cy.get('#solver_result_3 > :nth-child(18)')
                .should('have.html', 'A̅B̅')
            cy.get('#solver_result_3 > :nth-child(19)')
                .should('have.html', 'AC')
            cy.get('#solver_result_3 > :nth-child(20)')
                .should('have.html', 'BC̅')
            cy.get('#solver_result_3 > :nth-child(23)')
                .should('have.html', 'A̅B̅')
            cy.get('#solver_result_3 > :nth-child(24)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_3 > :nth-child(25)')
                .should('have.html', 'AC')

            cy.log('Checking MDNF...');
            cy.get('#solver_result_4')
                .find('span').should('have.length', 3)
            cy.get('#solver_result_4 > :nth-child(1)')
                .should('have.html', 'A̅B̅')
            cy.get('#solver_result_4 > :nth-child(2)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_4 > :nth-child(3)')
                .should('have.html', 'AC')
        })
    
        it('Minimalization 4 variables - D form', function(){
            cy.log('Dragging slider to value 4...');
            cy.get('#slider')
            .invoke('val', 4)
            .trigger('input')
            
            cy.log('Checking change of value...');
            cy.get('#output')
            .should('have.value', '4')
            cy.wait(10)
            
            cy.log('Clicking switches...');
            cy.get('#switch0').click()
            cy.get('#switch1').click()
            cy.get('#switch2').click()
            cy.get('#switch4').click()
            cy.get('#switch5').click()
            cy.get('#switch5').click()
            cy.get('#switch8').click()
            cy.get('#switch9').click()
            cy.get('#switch10').click()
            cy.get('#switch10').click()
            cy.get('#switch13').click()
            
            cy.log('Checking UDNF...');
            cy.get('#solver_result_1')
                .find('span').should('have.length', 7)
                
            cy.log('Checking SDNF...');
            cy.get('#solver_result_2')
                .find('span').should('have.length', 4)
            cy.get('#solver_result_2 > :nth-child(1)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_2 > :nth-child(2)')
                .should('have.html', 'B̅C̅')
            cy.get('#solver_result_2 > :nth-child(3)')
                .should('have.html', 'B̅D̅')
            cy.get('#solver_result_2 > :nth-child(4)')
                .should('have.html', 'C̅D')
            
            cy.log('Checking IDNF...');
            cy.get('#solver_result_3')
                .find('span').should('have.length', 3)
            cy.get('#solver_result_3 > :nth-child(2)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_3 > :nth-child(3)')
                .should('have.html', 'B̅D̅')
            cy.get('#solver_result_3 > :nth-child(4)')
                .should('have.html', 'C̅D')
            
            cy.log('Checking MDNF...');
            cy.get('#solver_result_4')
                .find('span').should('have.length', 3)
            cy.get('#solver_result_4 > :nth-child(1)')
                .should('have.html', 'A̅C̅')
            cy.get('#solver_result_4 > :nth-child(2)')
                .should('have.html', 'B̅D̅')
            cy.get('#solver_result_4 > :nth-child(3)')
                .should('have.html', 'C̅D')
        })

        it('Minimalization 4 variables - K form', function(){
            cy.log('Dragging slider to value 4...');
            cy.get('#slider')
            .invoke('val', 4)
            .trigger('input')
            
            cy.log('Checking change of value...');
            cy.get('#output')
            .should('have.value', '4')
            cy.wait(10)

            cy.log('Changing to K form...');
            cy.get('#menuButton').click()
            cy.wait(200)
            cy.get('.modal_modeSwitch-checkbox').click({force:true})
            cy.wait(200)
            cy.get('.close').click()
            cy.wait(200)

            cy.get('#solver_result_2 > :nth-child(1)')
                .should('have.html', '1')
            
            cy.log('Clicking switches...');
            cy.get('#switch0').click()
            cy.get('#switch1').click()
            cy.get('#switch2').click()
            cy.get('#switch4').click()
            cy.get('#switch5').click()
            cy.get('#switch5').click()
            cy.get('#switch8').click()
            cy.get('#switch9').click()
            cy.get('#switch10').click()
            cy.get('#switch10').click()
            cy.get('#switch13').click()
            
            cy.log('Checking UDNF...');
            cy.get('#solver_result_1')
                .find('span').should('have.length', 7)
                
            cy.log('Checking SDNF...');
            cy.get('#solver_result_2')
                .find('span').should('have.length', 5)
            cy.get('#solver_result_2 > :nth-child(1)')
                .should('have.html', '(B̅+C̅)')                  //A̅B̅C̅D̅
            cy.get('#solver_result_2 > :nth-child(2)')
                .should('have.html', '(A̅+C̅)')
            cy.get('#solver_result_2 > :nth-child(3)')
                .should('have.html', '(C̅+D̅)')
            cy.get('#solver_result_2 > :nth-child(4)')
                .should('have.html', '(A+B̅+D̅)')
            cy.get('#solver_result_2 > :nth-child(5)')
                .should('have.html', '(A̅+B̅+D)')
            
            cy.log('Checking IDNF...');
            cy.get('#solver_result_3')
                .find('span').should('have.length', 3)
            cy.get('#solver_result_3 > :nth-child(2)')
                .should('have.html', '(B̅+C̅)')
            cy.get('#solver_result_3 > :nth-child(3)')
                .should('have.html', '(C̅+D̅)')
            cy.get('#solver_result_3 > :nth-child(4)')
                .should('have.html', '(A̅+B̅+D)')
            
            cy.log('Checking MDNF...');
            cy.get('#solver_result_4')
                .find('span').should('have.length', 3)
            cy.get('#solver_result_4 > :nth-child(1)')
                .should('have.html', '(B̅+C̅)')
            cy.get('#solver_result_4 > :nth-child(2)')
                .should('have.html', '(C̅+D̅)')
            cy.get('#solver_result_4 > :nth-child(3)')
                .should('have.html', '(A̅+B̅+D)')
        })
    })
})
